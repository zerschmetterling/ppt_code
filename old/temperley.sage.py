
# This file was *autogenerated* from the file temperley.sage
from sage.all_cmdline import *   # import sage library

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_4 = Integer(4)
R = CC['a, b, c, d, e, aCC, bCC, cCC, dCC, eCC, q']; (a, b, c, d, e, aCC, bCC, cCC, dCC, eCC, q,) = R._first_ngens(11)
T = TemperleyLiebAlgebra(_sage_const_3 ,q,R)
bas = T.basis().list()

# Conjugate*Normal

rot = []
rotConj = []

rot.append(a*bas[_sage_const_1 ] + b*bas[_sage_const_3 ] + c*bas[_sage_const_2 ] + d*bas[_sage_const_4 ] + e*bas[_sage_const_0 ])
rot.append(a*bas[_sage_const_0 ] + b*bas[_sage_const_2 ] + c*bas[_sage_const_3 ] + d*bas[_sage_const_1 ] + e*bas[_sage_const_4 ])
rot.append(a*bas[_sage_const_4 ] + b*bas[_sage_const_3 ] + c*bas[_sage_const_2 ] + d*bas[_sage_const_0 ] + e*bas[_sage_const_1 ])
rot.append(a*bas[_sage_const_1 ] + b*bas[_sage_const_2 ] + c*bas[_sage_const_3 ] + d*bas[_sage_const_4 ] + e*bas[_sage_const_0 ])
rot.append(a*bas[_sage_const_0 ] + b*bas[_sage_const_3 ] + c*bas[_sage_const_2 ] + d*bas[_sage_const_1 ] + e*bas[_sage_const_4 ])
rot.append(a*bas[_sage_const_4 ] + b*bas[_sage_const_2 ] + c*bas[_sage_const_3 ] + d*bas[_sage_const_0 ] + e*bas[_sage_const_1 ])

rotConj.append(aCC*bas[_sage_const_1 ] + bCC*bas[_sage_const_3 ] + cCC*bas[_sage_const_2 ] + dCC*bas[_sage_const_0 ] + eCC*bas[_sage_const_4 ])
rotConj.append(aCC*bas[_sage_const_4 ] + bCC*bas[_sage_const_2 ] + cCC*bas[_sage_const_3 ] + dCC*bas[_sage_const_1 ] + eCC*bas[_sage_const_0 ])
rotConj.append(aCC*bas[_sage_const_0 ] + bCC*bas[_sage_const_3 ] + cCC*bas[_sage_const_2 ] + dCC*bas[_sage_const_4 ] + eCC*bas[_sage_const_1 ])
rotConj.append(aCC*bas[_sage_const_1 ] + bCC*bas[_sage_const_2 ] + cCC*bas[_sage_const_3 ] + dCC*bas[_sage_const_0 ] + eCC*bas[_sage_const_4 ])
rotConj.append(aCC*bas[_sage_const_4 ] + bCC*bas[_sage_const_3 ] + cCC*bas[_sage_const_2 ] + dCC*bas[_sage_const_1 ] + eCC*bas[_sage_const_0 ])
rotConj.append(aCC*bas[_sage_const_0 ] + bCC*bas[_sage_const_2 ] + cCC*bas[_sage_const_3 ] + dCC*bas[_sage_const_4 ] + eCC*bas[_sage_const_1 ])


answer = []
answerTerms = []

for i in range(len(rot)):
    answer.append(rotConj[i]*rot[i])
    answerTerms.append(answer[i].terms())

answerOtherWay = []
answerTermsOtherWay = []

for i in range(len(rot)):
    answerOtherWay.append(rot[i]*rotConj[i])
    answerTermsOtherWay.append(answerOtherWay[i].terms())


